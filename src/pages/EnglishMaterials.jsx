import React, { useEffect, useState } from "react";

function EnglishMaterials() {
  const [data, setData] = useState(null);

  useEffect(() => {
    fetch("/materials/materials.json")
      .then((res) => res.json())
      .then(setData);
  }, []);

  if (!data) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;

  const renderFiles = (files) => {
    if (!files || files.length === 0) return <p>–§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.</p>;
    return (
      <ul style={{ listStyle: 'none', padding: 0 }}>
        {files.map((file, i) => (
          <li key={i} style={{ marginBottom: '8px' }}>
            <a
              href={`/${file.path}`}
              target="_blank"
              rel="noopener noreferrer"
              style={{ color: '#4ecdc4', textDecoration: 'none' }}
              onMouseEnter={(e) => e.target.style.textDecoration = 'underline'}
              onMouseLeave={(e) => e.target.style.textDecoration = 'none'}
            >
              üìÑ {file.name}
            </a>
          </li>
        ))}
      </ul>
    );
  };

  const sections = [
    { key: 'grammar', title: '–ì—Ä–∞–º–º–∞—Ç–∏–∫–∞', desc: '–ò–∑—É—á–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–π –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏' },
    { key: 'dictionary', title: '–°–ª–æ–≤–∞—Ä—å', desc: '–†–∞—Å—à–∏—Ä—å—Ç–µ —Å–≤–æ–π —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å' },
    { key: 'dialogues', title: '–î–∏–∞–ª–æ–≥–∏', desc: '–ü—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–≥–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ' },
    { key: 'courses', title: '–ö—É—Ä—Å—ã', desc: '–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ' },
  ];

  return (
    <main>
      <h2>–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ ‚Äî –ú–∞—Ç–µ—Ä–∏–∞–ª—ã</h2>
      <div className="subject-blocks">
        {sections.map((section) => {
          const sectionData = data.english[section.key];
          let files = [];
          if (sectionData && sectionData.files) {
            files = sectionData.files;
          } else if (section.key === 'courses' && sectionData) {
            // For courses, collect files from subdirectories
            Object.values(sectionData).forEach(sub => {
              if (sub.files) files = files.concat(sub.files);
            });
          }

          return (
            <div key={section.key} className="block">
              <h3>{section.title}</h3>
              <p>{section.desc}</p>
              {renderFiles(files)}
            </div>
          );
        })}
      </div>
      <div style={{ textAlign: 'center', marginTop: '20px' }}>
        <button
          onClick={async () => {
            try {
              const response = await fetch('/materials/materials.json', { cache: 'no-cache' });
              if (response.ok) {
                window.location.reload();
              } else {
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å npm run scan.');
              }
            } catch (error) {
              alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏. –ó–∞–ø—É—Å—Ç–∏—Ç–µ npm run scan –≤—Ä—É—á–Ω—É—é.');
            }
          }}
          style={{
            background: 'linear-gradient(45deg, #ff6b6b, #4ecdc4)',
            color: 'white',
            border: 'none',
            padding: '10px 20px',
            borderRadius: '8px',
            cursor: 'pointer',
            fontWeight: 'bold'
          }}
        >
          –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        </button>
      </div>
    </main>
  );
}

export default EnglishMaterials;
